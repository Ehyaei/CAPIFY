filter(type != "Real-world Data") %>%
ggplot(aes(x = trainer, y = mean,fill = isCapify))+
geom_col(position="dodge")+
geom_errorbar(aes(ymin = mean - std, ymax = mean + std, color = isCapify), width = 0.2,
position = position_dodge(0.9)) +
facet_grid(type~dataset, scales = "free")+
scale_y_continuous(labels = scales::percent)+
labs(x = NULL, y = NULL)+
scale_fill_manual(values = bicols)+
scale_color_manual(values = c("#0e305f","#a4521e"))+
theme_Publication()+
theme(
axis.text.x = element_text(angle = 45,hjust = 0.5,vjust = 0.5, size = 8, face = c('plain', 'plain','bold', 'plain', 'plain', 'plain')),
legend.position = "none"
)
p2
p <- plot_grid(p1, p2, align = "h", rel_widths = c(1, 2))
ggsave(paste0(indicators[i], ".pdf"),p,device = cairo_pdf,width = 40,height = 10,units = "cm")
}
for(i in 1:7){
p1 = df %>%
filter(indicator == indicators[i] ) %>%
filter(type == "Real-world Data") %>%
ggplot(aes(x = trainer, y = mean, fill = isCapify))+
geom_col(position="dodge")+
geom_errorbar(aes(ymin = mean - std, ymax = mean + std,color = isCapify),
width = 0.2, position = position_dodge(0.9)) +
facet_grid(type~dataset, scales = "free")+
scale_y_continuous(labels = scales::percent)+
labs(x = NULL, y = TeX(ind_labels[i]))+
scale_fill_manual(values = bicols)+
scale_color_manual(values = c("#0e305f","#a4521e"))+
theme_Publication()+
theme(
axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text.x = element_text(angle = 45,hjust = 0, size = 8,face = c('plain', 'plain','bold', 'plain', 'plain', 'plain')),
legend.position = "none"
)
# p1
p2 = df %>%
filter(indicator == indicators[i] ) %>%
filter(type != "Real-world Data") %>%
ggplot(aes(x = trainer, y = mean,fill = isCapify))+
geom_col(position="dodge")+
geom_errorbar(aes(ymin = mean - std, ymax = mean + std, color = isCapify), width = 0.2,
position = position_dodge(0.9)) +
facet_grid(type~dataset, scales = "free")+
scale_y_continuous(labels = scales::percent)+
labs(x = NULL, y = NULL)+
scale_fill_manual(values = bicols)+
scale_color_manual(values = c("#0e305f","#a4521e"))+
theme_Publication()+
theme(
axis.text.x = element_text(angle = 45,hjust = 0, size = 8, face = c('plain', 'plain','bold', 'plain', 'plain', 'plain')),
legend.position = "none"
)
p2
p <- plot_grid(p1, p2, align = "h", rel_widths = c(1, 2))
ggsave(paste0(indicators[i], ".pdf"),p,device = cairo_pdf,width = 40,height = 10,units = "cm")
}
for(i in 1:7){
p1 = df %>%
filter(indicator == indicators[i] ) %>%
filter(type == "Real-world Data") %>%
ggplot(aes(x = trainer, y = mean, fill = isCapify))+
geom_col(position="dodge")+
geom_errorbar(aes(ymin = mean - std, ymax = mean + std,color = isCapify),
width = 0.2, position = position_dodge(0.9)) +
facet_grid(type~dataset, scales = "free")+
scale_y_continuous(labels = scales::percent)+
labs(x = NULL, y = TeX(ind_labels[i]))+
scale_fill_manual(values = bicols)+
scale_color_manual(values = c("#0e305f","#a4521e"))+
theme_Publication()+
theme(
axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text.x = element_text(angle = 45,hjust = 1, size = 8,face = c('plain', 'plain','bold', 'plain', 'plain', 'plain')),
legend.position = "none"
)
# p1
p2 = df %>%
filter(indicator == indicators[i] ) %>%
filter(type != "Real-world Data") %>%
ggplot(aes(x = trainer, y = mean,fill = isCapify))+
geom_col(position="dodge")+
geom_errorbar(aes(ymin = mean - std, ymax = mean + std, color = isCapify), width = 0.2,
position = position_dodge(0.9)) +
facet_grid(type~dataset, scales = "free")+
scale_y_continuous(labels = scales::percent)+
labs(x = NULL, y = NULL)+
scale_fill_manual(values = bicols)+
scale_color_manual(values = c("#0e305f","#a4521e"))+
theme_Publication()+
theme(
axis.text.x = element_text(angle = 45,hjust = 1, size = 8, face = c('plain', 'plain','bold', 'plain', 'plain', 'plain')),
legend.position = "none"
)
p2
p <- plot_grid(p1, p2, align = "h", rel_widths = c(1, 2))
ggsave(paste0(indicators[i], ".pdf"),p,device = cairo_pdf,width = 40,height = 10,units = "cm")
}
for(i in 1:7){
p1 = df %>%
filter(indicator == indicators[i] ) %>%
filter(type == "Real-world Data") %>%
ggplot(aes(x = trainer, y = mean, fill = isCapify))+
geom_col(position="dodge")+
geom_errorbar(aes(ymin = mean - std, ymax = mean + std,color = isCapify),
width = 0.2, position = position_dodge(0.9)) +
facet_grid(type~dataset, scales = "free")+
scale_y_continuous(labels = scales::percent)+
labs(x = NULL, y = TeX(ind_labels[i]))+
scale_fill_manual(values = bicols)+
scale_color_manual(values = c("#0e305f","#a4521e"))+
theme_Publication()+
theme(
axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text.x = element_text(angle = 45,hjust = 1, size = 8,face = c('plain', 'plain','bold', 'plain', 'plain', 'plain')),
legend.position = "none"
)
# p1
p2 = df %>%
filter(indicator == indicators[i] ) %>%
filter(type != "Real-world Data") %>%
ggplot(aes(x = trainer, y = mean,fill = isCapify))+
geom_col(position="dodge")+
geom_errorbar(aes(ymin = mean - std, ymax = mean + std, color = isCapify), width = 0.2,
position = position_dodge(0.9)) +
facet_grid(type~dataset, scales = "free")+
scale_y_continuous(labels = scales::percent)+
labs(x = NULL, y = NULL)+
scale_fill_manual(values = bicols)+
scale_color_manual(values = c("#0e305f","#a4521e"))+
theme_Publication()+
theme(
axis.text.x = element_text(angle = 45,hjust = 1, size = 8, face = c('plain', 'plain','bold', 'plain', 'plain', 'plain')),
legend.position = "none"
)
p2
p <- plot_grid(p1, p2, align = "h", rel_widths = c(1, 2))
ggsave(paste0(indicators[i], ".pdf"),p,device = cairo_pdf,width = 40,height = 10,units = "cm")
}
i  = 2
p1 = df %>%
filter(indicator == indicators[i] ) %>%
filter(type == "Real-world Data") %>%
ggplot(aes(x = trainer, y = mean, fill = isCapify))+
geom_col(position="dodge")+
geom_errorbar(aes(ymin = mean - std, ymax = mean + std,color = isCapify),
width = 0.2, position = position_dodge(0.9)) +
facet_grid(type~dataset, scales = "free")+
#scale_y_continuous(labels = scales::percent)+
labs(x = NULL, y = TeX(ind_labels[i]))+
scale_fill_manual(values = bicols)+
scale_color_manual(values = c("#0e305f","#a4521e"))+
theme_Publication()+
theme(
axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text.x = element_text(angle = 45, size = 8, hjust = 1,face = c('plain', 'plain','bold', 'plain', 'plain', 'plain')),
legend.position = "none"
)
p2 = df %>%
filter(indicator == indicators[i] ) %>%
filter(type != "Real-world Data") %>%
ggplot(aes(x = trainer, y = mean,fill = isCapify))+
geom_col(position="dodge")+
geom_errorbar(aes(ymin = mean - std, ymax = mean + std, color = isCapify), width = 0.2,
position = position_dodge(0.9)) +
facet_grid(type~dataset, scales = "free")+
#scale_y_continuous(labels = scales::percent)+
labs(x = NULL, y = NULL)+
scale_fill_manual(values = bicols)+
scale_color_manual(values = c("#0e305f","#a4521e"))+
theme_Publication()+
theme(
axis.text.x = element_text(angle = 45, size = 8, hjust = 1,face = c('plain', 'plain','bold', 'plain', 'plain', 'plain')),
legend.position = "none"
)
p2
p <- plot_grid(p1, p2, align = "h", rel_widths = c(1, 2))
ggsave(paste0(indicators[i], ".pdf"),p,device = cairo_pdf,width = 40,height = 10,units = "cm")
library(tidyverse)
library(latex2exp)
library(cowplot)
source("plot_utils.R")
result = read_csv("../data/result_table.csv") %>%
mutate(dataset = ifelse(nchar(dataset)>3, str_to_title(dataset), str_to_upper(dataset))) %>%
mutate(dataset = ifelse(dataset == "Compas", "COMPAS", dataset))
result %>%
group_by(trainer, dataset) %>%
summarise(
accs_sd = sd(accs,na.rm = T),
mccs_sd = sd(mccs),
uai_05_sd = sd(uai_05),
uai_01_sd = sd(uai_01),
uai_cf_sd = sd(uai_cf),
uai_ar_05_sd = sd(uai_ar_05),
uai_ar_01_sd = sd(uai_ar_01),
accs = mean(accs),
mccs = mean(mccs),
uai_05 = mean(uai_05),
uai_01 = mean(uai_01),
uai_cf = mean(uai_cf),
uai_ar_05 = mean(uai_ar_05),
uai_ar_01 = mean(uai_ar_01)
) -> df_table
df_table %>%
select(trainer, dataset, accs, mccs, uai_05, uai_01, uai_cf, uai_ar_05, uai_ar_01) %>%
gather("indicator","mean",-trainer,-dataset) %>%
filter(trainer!="SENSEI") %>%
mutate(isCapify = trainer == "CAPIFY") %>%
mutate(type = ifelse(dataset %in% c("Adult", "Compas"), "Real-world Data","Synthetic Data"))-> df1
df_table %>%
select(trainer, dataset, accs_sd, mccs_sd, uai_05_sd, uai_01_sd, uai_cf_sd, uai_ar_05_sd, uai_ar_01_sd) %>%
gather("indicator","std",-trainer,-dataset) %>%
filter(trainer!="SENSEI") %>%
mutate( indicator= gsub("_sd","",indicator)) -> df2
df = merge(df1, df2, by = intersect(colnames(df1),colnames(df2)))
############################################################
#                                                          #
#                       Plots                              #
#                                                          #
############################################################
indicators = c("accs", "mccs", "uai_05", "uai_01", "uai_cf","uai_ar_05", "uai_ar_01")
ind_labels = c("Accuracy","MCC Score",
"Unfair Area ($\\Delta = 0.05$)",
"Unfair Area ($\\Delta = 0.01$)",
"Counterfactual Unfair Area",
"Non-robust Area ($\\Delta = 0.05$)",
"Non-robust ($\\Delta = 0.01$)")
for(i in 1:7){
p1 = df %>%
filter(indicator == indicators[i] ) %>%
filter(type == "Real-world Data") %>%
ggplot(aes(x = trainer, y = mean, fill = isCapify))+
geom_col(position="dodge")+
geom_errorbar(aes(ymin = mean - std, ymax = mean + std,color = isCapify),
width = 0.2, position = position_dodge(0.9)) +
facet_grid(type~dataset, scales = "free")+
scale_y_continuous(labels = scales::percent)+
labs(x = NULL, y = TeX(ind_labels[i]))+
scale_fill_manual(values = bicols)+
scale_color_manual(values = c("#0e305f","#a4521e"))+
theme_Publication()+
theme(
axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text.x = element_text(angle = 45,hjust = 1, size = 8,face = c('plain', 'plain','bold', 'plain', 'plain', 'plain')),
legend.position = "none"
)
# p1
p2 = df %>%
filter(indicator == indicators[i] ) %>%
filter(type != "Real-world Data") %>%
ggplot(aes(x = trainer, y = mean,fill = isCapify))+
geom_col(position="dodge")+
geom_errorbar(aes(ymin = mean - std, ymax = mean + std, color = isCapify), width = 0.2,
position = position_dodge(0.9)) +
facet_grid(type~dataset, scales = "free")+
scale_y_continuous(labels = scales::percent)+
labs(x = NULL, y = NULL)+
scale_fill_manual(values = bicols)+
scale_color_manual(values = c("#0e305f","#a4521e"))+
theme_Publication()+
theme(
axis.text.x = element_text(angle = 45,hjust = 1, size = 8, face = c('plain', 'plain','bold', 'plain', 'plain', 'plain')),
legend.position = "none"
)
p2
p <- plot_grid(p1, p2, align = "h", rel_widths = c(1, 2))
ggsave(paste0(indicators[i], ".pdf"),p,device = cairo_pdf,width = 40,height = 10,units = "cm")
}
i  = 2
p1 = df %>%
filter(indicator == indicators[i] ) %>%
filter(type == "Real-world Data") %>%
ggplot(aes(x = trainer, y = mean, fill = isCapify))+
geom_col(position="dodge")+
geom_errorbar(aes(ymin = mean - std, ymax = mean + std,color = isCapify),
width = 0.2, position = position_dodge(0.9)) +
facet_grid(type~dataset, scales = "free")+
#scale_y_continuous(labels = scales::percent)+
labs(x = NULL, y = TeX(ind_labels[i]))+
scale_fill_manual(values = bicols)+
scale_color_manual(values = c("#0e305f","#a4521e"))+
theme_Publication()+
theme(
axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text.x = element_text(angle = 45, size = 8, hjust = 1,face = c('plain', 'plain','bold', 'plain', 'plain', 'plain')),
legend.position = "none"
)
p2 = df %>%
filter(indicator == indicators[i] ) %>%
filter(type != "Real-world Data") %>%
ggplot(aes(x = trainer, y = mean,fill = isCapify))+
geom_col(position="dodge")+
geom_errorbar(aes(ymin = mean - std, ymax = mean + std, color = isCapify), width = 0.2,
position = position_dodge(0.9)) +
facet_grid(type~dataset, scales = "free")+
#scale_y_continuous(labels = scales::percent)+
labs(x = NULL, y = NULL)+
scale_fill_manual(values = bicols)+
scale_color_manual(values = c("#0e305f","#a4521e"))+
theme_Publication()+
theme(
axis.text.x = element_text(angle = 45, size = 8, hjust = 1,face = c('plain', 'plain','bold', 'plain', 'plain', 'plain')),
legend.position = "none"
)
p2
p <- plot_grid(p1, p2, align = "h", rel_widths = c(1, 2))
ggsave(paste0(indicators[i], ".pdf"),p,device = cairo_pdf,width = 40,height = 10,units = "cm")
library(tidyverse)
library(latex2exp)
library(cowplot)
source("plot_utils.R")
result = read_csv("../data/result_table.csv") %>%
mutate(dataset = ifelse(nchar(dataset)>3, str_to_title(dataset), str_to_upper(dataset))) %>%
mutate(dataset = ifelse(dataset == "Compas", "COMPAS", dataset))
result %>%
group_by(trainer, dataset) %>%
summarise(
accs_sd = sd(accs,na.rm = T),
mccs_sd = sd(mccs),
uai_05_sd = sd(uai_05),
uai_01_sd = sd(uai_01),
uai_cf_sd = sd(uai_cf),
uai_ar_05_sd = sd(uai_ar_05),
uai_ar_01_sd = sd(uai_ar_01),
accs = mean(accs),
mccs = mean(mccs),
uai_05 = mean(uai_05),
uai_01 = mean(uai_01),
uai_cf = mean(uai_cf),
uai_ar_05 = mean(uai_ar_05),
uai_ar_01 = mean(uai_ar_01)
) -> df_table
df_table %>%
select(trainer, dataset, accs, mccs, uai_05, uai_01, uai_cf, uai_ar_05, uai_ar_01) %>%
gather("indicator","mean",-trainer,-dataset) %>%
filter(trainer!="SENSEI") %>%
mutate(isCapify = trainer == "CAPIFY") %>%
mutate(type = ifelse(dataset %in% c("Adult", "COMPAS"), "Real-world Data","Synthetic Data"))-> df1
df_table %>%
select(trainer, dataset, accs_sd, mccs_sd, uai_05_sd, uai_01_sd, uai_cf_sd, uai_ar_05_sd, uai_ar_01_sd) %>%
gather("indicator","std",-trainer,-dataset) %>%
filter(trainer!="SENSEI") %>%
mutate( indicator= gsub("_sd","",indicator)) -> df2
df = merge(df1, df2, by = intersect(colnames(df1),colnames(df2)))
############################################################
#                                                          #
#                       Plots                              #
#                                                          #
############################################################
indicators = c("accs", "mccs", "uai_05", "uai_01", "uai_cf","uai_ar_05", "uai_ar_01")
ind_labels = c("Accuracy","MCC Score",
"Unfair Area ($\\Delta = 0.05$)",
"Unfair Area ($\\Delta = 0.01$)",
"Counterfactual Unfair Area",
"Non-robust Area ($\\Delta = 0.05$)",
"Non-robust ($\\Delta = 0.01$)")
for(i in 1:7){
p1 = df %>%
filter(indicator == indicators[i] ) %>%
filter(type == "Real-world Data") %>%
ggplot(aes(x = trainer, y = mean, fill = isCapify))+
geom_col(position="dodge")+
geom_errorbar(aes(ymin = mean - std, ymax = mean + std,color = isCapify),
width = 0.2, position = position_dodge(0.9)) +
facet_grid(type~dataset, scales = "free")+
scale_y_continuous(labels = scales::percent)+
labs(x = NULL, y = TeX(ind_labels[i]))+
scale_fill_manual(values = bicols)+
scale_color_manual(values = c("#0e305f","#a4521e"))+
theme_Publication()+
theme(
axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text.x = element_text(angle = 45,hjust = 1, size = 8,face = c('plain', 'plain','bold', 'plain', 'plain', 'plain')),
legend.position = "none"
)
# p1
p2 = df %>%
filter(indicator == indicators[i] ) %>%
filter(type != "Real-world Data") %>%
ggplot(aes(x = trainer, y = mean,fill = isCapify))+
geom_col(position="dodge")+
geom_errorbar(aes(ymin = mean - std, ymax = mean + std, color = isCapify), width = 0.2,
position = position_dodge(0.9)) +
facet_grid(type~dataset, scales = "free")+
scale_y_continuous(labels = scales::percent)+
labs(x = NULL, y = NULL)+
scale_fill_manual(values = bicols)+
scale_color_manual(values = c("#0e305f","#a4521e"))+
theme_Publication()+
theme(
axis.text.x = element_text(angle = 45,hjust = 1, size = 8, face = c('plain', 'plain','bold', 'plain', 'plain', 'plain')),
legend.position = "none"
)
p2
p <- plot_grid(p1, p2, align = "h", rel_widths = c(1, 2))
ggsave(paste0(indicators[i], ".pdf"),p,device = cairo_pdf,width = 40,height = 10,units = "cm")
}
############################################################
#                                                          #
#                         Table 1                          #
#                                                          #
############################################################
library(kableExtra)
i  = 2
p1 = df %>%
filter(indicator == indicators[i] ) %>%
filter(type == "Real-world Data") %>%
ggplot(aes(x = trainer, y = mean, fill = isCapify))+
geom_col(position="dodge")+
geom_errorbar(aes(ymin = mean - std, ymax = mean + std,color = isCapify),
width = 0.2, position = position_dodge(0.9)) +
facet_grid(type~dataset, scales = "free")+
#scale_y_continuous(labels = scales::percent)+
labs(x = NULL, y = TeX(ind_labels[i]))+
scale_fill_manual(values = bicols)+
scale_color_manual(values = c("#0e305f","#a4521e"))+
theme_Publication()+
theme(
axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text.x = element_text(angle = 45, size = 8, hjust = 1,face = c('plain', 'plain','bold', 'plain', 'plain', 'plain')),
legend.position = "none"
)
p2 = df %>%
filter(indicator == indicators[i] ) %>%
filter(type != "Real-world Data") %>%
ggplot(aes(x = trainer, y = mean,fill = isCapify))+
geom_col(position="dodge")+
geom_errorbar(aes(ymin = mean - std, ymax = mean + std, color = isCapify), width = 0.2,
position = position_dodge(0.9)) +
facet_grid(type~dataset, scales = "free")+
#scale_y_continuous(labels = scales::percent)+
labs(x = NULL, y = NULL)+
scale_fill_manual(values = bicols)+
scale_color_manual(values = c("#0e305f","#a4521e"))+
theme_Publication()+
theme(
axis.text.x = element_text(angle = 45, size = 8, hjust = 1,face = c('plain', 'plain','bold', 'plain', 'plain', 'plain')),
legend.position = "none"
)
p2
p <- plot_grid(p1, p2, align = "h", rel_widths = c(1, 2))
ggsave(paste0(indicators[i], ".pdf"),p,device = cairo_pdf,width = 40,height = 10,units = "cm")
library(tidyverse)
library(latex2exp)
library(cowplot)
source("plot_utils.R")
result = read_csv("../data/result_table.csv") %>%
mutate(dataset = ifelse(nchar(dataset)>3, str_to_title(dataset), str_to_upper(dataset))) %>%
mutate(dataset = ifelse(dataset == "Compas", "COMPAS", dataset))
result %>%
group_by(trainer, dataset) %>%
summarise(
accs_sd = sd(accs,na.rm = T),
mccs_sd = sd(mccs),
uai_05_sd = sd(uai_05),
uai_01_sd = sd(uai_01),
uai_cf_sd = sd(uai_cf),
uai_ar_05_sd = sd(uai_ar_05),
uai_ar_01_sd = sd(uai_ar_01),
accs = mean(accs),
mccs = mean(mccs),
uai_05 = mean(uai_05),
uai_01 = mean(uai_01),
uai_cf = mean(uai_cf),
uai_ar_05 = mean(uai_ar_05),
uai_ar_01 = mean(uai_ar_01)
) -> df_table
df_table
df_table %>%
select(trainer, contains("_sd")) %>%
group_by(trainer)
df_table %>%
select(trainer, contains("_sd")) %>%
group_by(trainer) %>%
across(everything(), ~ mean(., na.rm = TRUE))
df_table %>%
select(trainer, contains("_sd")) %>%
group_by(trainer) %>%
summarise(across(everything(), ~ mean(., na.rm = TRUE)))
df_table %>%
filter(trainer!="SENSEI") %>%
select(trainer, contains("_sd")) %>%
group_by(trainer) %>%
summarise(across(everything(), ~ mean(., na.rm = TRUE)))
df_table %>%
filter(trainer!="SENSEI") %>%
select(trainer, contains("_sd")) %>%
group_by(trainer) %>%
summarise(across(everything(), ~ mean(., na.rm = TRUE))) %>%
gather("indicator","std",-trainer)
df_table %>%
filter(trainer!="SENSEI") %>%
select(trainer, contains("_sd")) %>%
group_by(trainer) %>%
summarise(across(everything(), ~ mean(., na.rm = TRUE))) %>%
gather("indicator","std",-trainer) %>%
group_by(trainer) %>%
summarise(std = mean(std))
df_table %>%
filter(trainer!="SENSEI") %>%
select(trainer, contains("_sd")) %>%
group_by(trainer) %>%
summarise(across(everything(), ~ mean(., na.rm = TRUE))) %>%
gather("indicator","std",-trainer) %>%
group_by(trainer) %>%
summarise(std = mean(std)) %>%
mutate(CAPIFY = ifelse(trainer == "CAPIFY", T, F )) %>%
group_by(CAPIFY) %>%
summarise(std = mean(std))
